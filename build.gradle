plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.safety'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // mysql //
    runtimeOnly 'com.mysql:mysql-connector-j'
    // redis //
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // spring security //
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    // jwt //
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.3'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.3'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.3'
    // gson //
    implementation 'com.google.code.gson:gson:2.8.8'
    // opencsv //
    implementation 'com.opencsv:opencsv:5.5.2'
    // hibernate-spatial //
    implementation 'org.locationtech.jts:jts-core:1.18.0'
    implementation 'org.hibernate:hibernate-spatial:6.5.2.Final'
    // FCM //
    implementation 'com.google.firebase:firebase-admin:9.2.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
